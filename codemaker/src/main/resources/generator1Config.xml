<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <properties resource="jdbc.properties"/>
    <!-- ojdbc6.jar已经直接放到项目中,无需指定了,同时mysql驱动包也一样,这里同样无需指定 -->
    <!-- <classPathEntry location="ojdbc6.jar" /> -->
    <context id="context1" targetRuntime="MyBatis3">
        <!-- 指定生成的java文件的编码,没有直接生成到项目时中文可能会乱码 -->
        <property name="javaFileEncoding" value="UTF-8"/>
        <!-- 生成的pojo，将implements Serializable-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
        <!-- 这里的type里写的是你的实现类的类全路径 -->
        <commentGenerator type="cn.brighton.mybatisgenerator.codemaker.MyCommentGenerator">
            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->
            <property name="suppressAllComments" value="false" />
        </commentGenerator>

        <!--<jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver"-->
        <!--connectionURL="jdbc:oracle:thin:@远程ip地址或localhost:1521:orcl" userId="用户名"-->
        <!--password="密码">-->
        <!--&lt;!&ndash; 针对oracle数据库 &ndash;&gt;-->
        <!--<property name="remarksReporting" value="true"></property>-->
        <!--</jdbcConnection>-->
        　　　　
        <!-- mysql配置 -->
        <jdbcConnection driverClass="${jdbc.driverClassName}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}"
                        password="${jdbc.password}">
            <!--针对mysql数据库-->
            <property name="useInformationSchema" value="true"></property>
        </jdbcConnection>

        <!--
        默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer
            true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal
        -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>

        <!--
        生成model模型，对应的包路径，以及文件存放路径(targetProject)，targetProject可以指定具体的路径,如./src/main/java，
        也可以使用“MAVEN”来自动生成，这样生成的代码会在target/generatord-source目录下
        -->
        <!--<javaModelGenerator targetPackage="com.joey.mybaties.test.pojo" targetProject="MAVEN">-->
        <javaModelGenerator targetPackage="cn.brighton.mybatisgenerator.codemaker.Entity"
                            targetProject="D:\ANJI\2.0.0\java\codemaker\src\main\java">
            <property name="enableSubPackages" value="true" />
            <!-- 从数据库返回的值被清理前后的空格  -->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>

        <!--对应的mapper.xml文件  -->
        <sqlMapGenerator targetPackage="Mapper"
                         targetProject="D:\ANJI\2.0.0\java\codemaker\src\main\resources">
            <property name="enableSubPackages" value="true" />
        </sqlMapGenerator>

        <!-- 对应的Mapper接口类文件 -->
        <!-- mapper class -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="cn.brighton.mybatisgenerator.codemaker.Mapper" targetProject="D:\ANJI\2.0.0\java\codemaker\src\main\java">
            <property name="enableSubPackages" value="true" />
        </javaClientGenerator>


        <!--不生成帮助类（Exmaples） -->
        <!-- enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false"
            enableSelectByExample="false" selectByExampleQueryId="false" -->
        <!--已生成的表 <table schema="demo" tableName="USER" domainObjectName="User"></table> -->
        <!-- 列出要生成代码的所有表，这里配置的是不生成Example文件 -->
        <table schema="" tableName="TT_PLAN_SVO" domainObjectName="PlanSVO"
               enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               selectByExampleQueryId="false">
        </table>

    </context>
</generatorConfiguration>